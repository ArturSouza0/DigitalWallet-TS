generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model transactions {
  id                                    Int       @id @default(autoincrement())
  sender_id                             Int
  receiver_id                           Int
  amount                                Decimal   @db.Decimal(10, 2)
  timestamp                             DateTime? @default(now()) @db.Timestamp(6)
  users_transactions_receiver_idTousers users     @relation("transactions_receiver_idTousers", fields: [receiver_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_receiver")
  users_transactions_sender_idTousers   users     @relation("transactions_sender_idTousers", fields: [sender_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sender")

  @@index([sender_id], map: "idx_transactions_sender")
}

model users {
  id                                           Int            @id @default(autoincrement())
  username                                     String         @unique @db.VarChar(150)
  email                                        String         @unique @db.VarChar(254)
  password_hash                                String         @db.VarChar(128)
  created_at                                   DateTime?      @default(now()) @db.Timestamp(6)
  transactions_transactions_receiver_idTousers transactions[] @relation("transactions_receiver_idTousers")
  transactions_transactions_sender_idTousers   transactions[] @relation("transactions_sender_idTousers")
  wallets                                      wallets?

  @@index([email], map: "idx_users_email")
  @@index([username], map: "idx_users_username")
}

model wallets {
  id         Int       @id @default(autoincrement())
  user_id    Int       @unique
  balance    Decimal?  @default(0.00) @db.Decimal(10, 2)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}
